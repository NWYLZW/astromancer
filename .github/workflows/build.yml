name: Build Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build-release:
    name: Build Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install dependencies
        run: |
          yarn
      - name: Build Release
        run: |
          yarn lint
          yarn build
      - name: Upload release
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: ./astromancer.zip
      - name: Generate changeLog
        run: |
          yarn changelog
      - name: Upload changelog
        uses: actions/upload-artifact@v2
        with:
          name: latestChangelog
          path: latestChangelog.md

  publish-release:
    needs: [ build-release ]
    name: Publish Release
    runs-on: ubuntu-latest

    steps:
      - name: Download changelog
        id: download-changelog
        uses: actions/download-artifact@v2
        with:
          name: latestChangelog

      - name: Save changelog to env
        id: save-changelog
        run: |
          latestChangelog="$(cat ./latestChangelog.md)"
          latestChangelog="${latestChangelog//'%'/'%25'}"
          latestChangelog="${latestChangelog//$'\n'/'%0A'}"
          latestChangelog="${latestChangelog//$'\r'/'%0D'}"
          echo "::set-output name=latestChangelog::$latestChangelog"

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: version ${{ github.ref }}
          body: ${{ steps.save-changelog.outputs.latestChangelog }}
          draft: false
          prerelease: false

      - name: Download release
        id: download-release
        uses: actions/download-artifact@v2
        with:
          name: release

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`.
          # See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./astromancer.zip
          asset_name: astromancer-${{ github.ref }}.zip
          asset_content_type: application/zip
